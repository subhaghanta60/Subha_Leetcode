*************TLE SOLUATION******************
class Solution {
public:
    vector<long long> getDistances(vector<int>& arr) {
        int len=arr.size();
        vector<long long>ans(len,0);
        
        for(int i=0;i<len;i++){
            long long sum=0;
            
            for(int j=0;j<len;j++){
                if(i !=j && arr[i] == arr[j]){
                    sum +=abs(i-j);
                }
                
            }
            ans[i]=sum;
            
        }
        return ans;
        
    }
};


********************************************
class Solution {
public:
    vector<long long> getDistances(vector<int>& arr) {
        unordered_map<int, long long >cntMap, sumMap;
        int n=arr.size();
        vector<long long> ans(n,0);
        for(int i=0;i<n;i++){
            ans[i] += (cntMap[arr[i]] *i *1LL - (sumMap[arr[i]]));
            cntMap[arr[i]]++;
            sumMap[arr[i]] += i;
        }
        sumMap.clear();
        cntMap.clear();
        for(int i=n-1;i>=0;i--){
            ans[i] += sumMap[arr[i]] - (cntMap[arr[i]] * i * 1LL);
            cntMap[arr[i]]++;
            sumMap[arr[i]] += i;
            
        }
        return ans;
        
        
    }
};
