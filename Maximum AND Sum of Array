class Solution {
private:
    int func(int ind,vector<int> &slotWt,vector<int> &nums,int numSlots, map<pair<int,vector<int>>,int>&dp){
        if(ind >= nums.size()) return 0;
        if(dp.find({ind,slotWt}) != dp.end()) return dp[{ind,slotWt}];
        int maxi =INT_MIN;
        for(int k=1;k<=numSlots;k++){
            if(slotWt[k] <2){
                slotWt[k]++;
                int ans = (nums[ind] & k) + func(ind+1,slotWt,nums,numSlots,dp);
                slotWt[k]--;
                maxi = max(ans,maxi);
                
            }
          }
     return dp[{ind,slotWt}]=maxi;    
}
public:
    int maximumANDSum(vector<int>& nums, int numSlots) {
       vector<int> slotWt(numSlots+1, 0);
        map<pair<int,vector<int>>,int>dp;
        return func(0,slotWt,nums,numSlots,dp);
    }
};
