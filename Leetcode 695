class Solution {
private:
    int dfs(vector<vector<int>>&grid, int i, int j){
      int max=0;
        if(i>=0 && i<grid.size() && j>=0 && j<grid[0].size() && grid[i][j] ==1){
              
            grid[i][j] =0;
            
        int dx[]={-1,0,1,0};
        int dy[]={0,1,0,-1};
        for(int k=0;k<4;k++){
            max +=dfs(grid,i+dx[k],j+dy[k]);
        }
            return 1+max;
        }
        return max;
}
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int max_area=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j] == 1){
                    int count =dfs(grid,i,j);
                    max_area=max(max_area, count);
                }
            }
        }
        return max_area;
    }
};
